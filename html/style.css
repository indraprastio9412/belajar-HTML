@font-face {
   font-family: "ja-med";
   src: url("https://cdn.jsdelivr.net/gh/codetheworld-to/static-files/ja-med.otf");
}

.container {
   position: relative;
   width: 800px;
   height:500px;
   display: grid;
   font-family: "ja-med",sans-serif;
   grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
   gap: 20px;
   padding: 20px;
}

.box {
   position: inherit;
   background: var(--img) center center;
   background-size: cover;
   background-repeat: no-repeat;
   transition: all 400ms;
   display: flex;
   justify-content: center;
   transition: all 0.3s ease;
}

.box img {
   width: 100%;
   height:auto;
   object-fit: cover;
   pointer-events: none;
   opacity: 0.5;
   transition: all 0.4s ease;
}

.container {
   grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
   gap: 1em;
   transition: all 400ms;
}

.container:hover .box {
   filter: grayscale(100%) opacity(24%);
}

.container .box:hover {
   filter: grayscale(0%) opacity(100%);
}

.container {
   --layout-1: 3fr 1fr 1fr 1fr 1fr;
   --layout-2: 1fr 3fr 1fr 1fr 1fr;
   --layout-3: 1fr 1fr 3fr 1fr 1fr;
   --layout-4: 1fr 1fr 1fr 3fr 1fr;
   --layout-5: 1fr 1fr 1fr 1fr 3fr;

   &:has(.box-1:hover) {
      grid-template-columns: var(--layout-1);
   }

   &:has(.box-2:hover) {
      grid-template-columns: var(--layout-2);
   }

   &:has(.box-3:hover) {
      grid-template-columns: var(--layout-3);
   }

   &:has(.box-4:hover) {
      grid-template-columns: var(--layout-4);
   }

   &:has(.box-5:hover) {
      grid-template-columns: var(--layout-5);
   }
}

.box {
   position: relative;
   width: 100%;
   height: auto;
   overflow: hidden;
   transition: all 0.4s ease;
}

.box::after {
   content: attr(data-text);
   position: absolute;
   font-size: large;
   color: #fff;
   bottom: 20px;
   padding: 10px 10px 10px 14px;
   letter-spacing: 4px;
   text-transform: uppercase;
   transition: all 400ms;
   transform: translateY(60px);
   opacity: 0;
}

.box:active::after {
   transform: translateY(0);
   opacity: 1;
   transition-delay: 200ms;
}

.box:hover::after {
   transform: translateY(0);
   opacity: 1;
   transition-delay: 200ms;
}

/* Ketika salah satu box ditekan, box lainnya akan mengecil */
.box:active {
   transform: scale(1.2);
   z-index: 2;
}

.box:active ~ .box {
   transform: scale(0.8);
   opacity: 0.7;
}

/* Opsional: Tambahkan efek hover juga */
.box:hover {
   transform: scale(1.1);
   z-index: 1;
}

.box:hover ~ .box {
   transform: scale(0.95);
}

/* Ketika ditekan, gambar menjadi tidak transparan */
.box:active img {
   opacity: 1;
}

/* Ketika hover, gambar sedikit lebih jelas (opsional) */
.box:hover img {
   opacity: 0.8;
}

/* Efek untuk gambar lain ketika salah satu ditekan */
.box:active ~ .box img {
   opacity: 0.2;
}

/* Efek untuk gambar sebelum yang ditekan */
.box:has(+ .box:active) img {
   opacity: 0.2;
}